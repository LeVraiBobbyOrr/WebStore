{"ast":null,"code":"var _jsxFileName = \"T:\\\\Dev\\\\Mongo\\\\test1\\\\client-app\\\\src\\\\ItemDetail.js\";\nimport React, { Component } from 'react';\nimport { Button, UncontrolledPopover, PopoverHeader, PopoverBody } from 'reactstrap';\n\nconst ItemDetail = props => {\n  const {\n    name,\n    price,\n    amount,\n    imageUrl\n  } = props.item;\n  const baseApiUrl = 'http://localhost:3000';\n  var imageUrlFull = baseApiUrl.concat(imageUrl);\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"media\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"media-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"media-object img-circle\",\n    width: \"150px\",\n    src: imageUrlFull,\n    alt: imageUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"media-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"media-heading\",\n    style: {\n      marginLeft: 1 + 'em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, name), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      marginLeft: 2 + 'em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, \"Price: \"), price), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      marginLeft: 2 + 'em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, \"Amount: \"), amount), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      marginLeft: 2 + 'em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"PopoverLegacy\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, \"Launch Popover\"), /*#__PURE__*/React.createElement(UncontrolledPopover, {\n    trigger: \"legacy\",\n    placement: \"bottom\",\n    target: \"PopoverLegacy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PopoverHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, \"Legacy Trigger\"), /*#__PURE__*/React.createElement(PopoverBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, \"Legacy is a reactstrap special trigger value (outside of bootstrap's spec/standard). Before reactstrap correctly supported click and focus, it had a hybrid which was very useful and has been brought back as trigger=\\\"legacy\\\". One advantage of the legacy trigger is that it allows the popover text to be selected while also closing when clicking outside the triggering element and popover itself.\"))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  })));\n};\n\nfunction addCartPopover() {\n  alert(\"Great Shot!\");\n}\n\nconst myelement = /*#__PURE__*/React.createElement(\"button\", {\n  onClick: addCartPopover,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }\n}, \"Take the shot!\");\nexport default ItemDetail;","map":{"version":3,"sources":["T:/Dev/Mongo/test1/client-app/src/ItemDetail.js"],"names":["React","Component","Button","UncontrolledPopover","PopoverHeader","PopoverBody","ItemDetail","props","name","price","amount","imageUrl","item","baseApiUrl","imageUrlFull","concat","marginLeft","addCartPopover","alert","myelement"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,mBAAjB,EAAsCC,aAAtC,EAAqDC,WAArD,QAAwE,YAAxE;;AAGA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AACxB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA;AAAvB,MAAoCJ,KAAK,CAACK,IAAhD;AACA,QAAMC,UAAU,GAAG,uBAAnB;AAEA,MAAIC,YAAY,GAAGD,UAAU,CAACE,MAAX,CAAkBJ,QAAlB,CAAnB;AAEA,sBACI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,SAAS,EAAC,yBADd;AAEI,IAAA,KAAK,EAAC,OAFV;AAGI,IAAA,GAAG,EAAEG,YAHT;AAII,IAAA,GAAG,EAAEH,QAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eASI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,eAAd;AAA8B,IAAA,KAAK,EAAE;AAAEK,MAAAA,UAAU,EAAE,IAAI;AAAlB,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiER,IAAjE,CADJ,eAEI;AAAG,IAAA,KAAK,EAAE;AAAEQ,MAAAA,UAAU,EAAE,IAAI;AAAlB,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEKP,KAFL,CAFJ,eAMI;AAAG,IAAA,KAAK,EAAE;AAAEO,MAAAA,UAAU,EAAE,IAAI;AAAlB,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKN,MAFL,CANJ,eAUI;AAAG,IAAA,KAAK,EAAE;AAAEM,MAAAA,UAAU,EAAE,IAAI;AAAlB,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,eAAX;AAA2B,IAAA,IAAI,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII,oBAAC,mBAAD;AAAqB,IAAA,OAAO,EAAC,QAA7B;AAAsC,IAAA,SAAS,EAAC,QAAhD;AAAyD,IAAA,MAAM,EAAC,eAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oZAFJ,CAJJ,CAVJ,eAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBJ,CATJ,CADJ;AAkCH,CAxCD;;AA0CA,SAASC,cAAT,GAA0B;AACtBC,EAAAA,KAAK,CAAC,aAAD,CAAL;AACH;;AAED,MAAMC,SAAS,gBACX;AAAQ,EAAA,OAAO,EAAEF,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ;AAIA,eAAeX,UAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, UncontrolledPopover, PopoverHeader, PopoverBody } from 'reactstrap';\r\n\r\n\r\nconst ItemDetail = props => {\r\n    const { name, price, amount, imageUrl } = props.item\r\n    const baseApiUrl = 'http://localhost:3000';\r\n\r\n    var imageUrlFull = baseApiUrl.concat(imageUrl);\r\n\r\n    return (\r\n        <li className=\"media\">\r\n            <div className=\"media-left\">\r\n                <img\r\n                    className=\"media-object img-circle\"\r\n                    width=\"150px\"\r\n                    src={imageUrlFull}\r\n                    alt={imageUrl}\r\n                />\r\n            </div>\r\n            <div className=\"media-right\">\r\n                <h4 className=\"media-heading\" style={{ marginLeft: 1 + 'em' }} >{name}</h4>\r\n                <p style={{ marginLeft: 2 + 'em' }}>\r\n                    <b >Price: </b>\r\n                    {price}\r\n                </p>\r\n                <p style={{ marginLeft: 2 + 'em' }}>\r\n                    <b >Amount: </b>\r\n                    {amount}\r\n                </p>\r\n                <p style={{ marginLeft: 2 + 'em' }}>\r\n                    <Button id=\"PopoverLegacy\" type=\"button\">\r\n                        Launch Popover\r\n      </Button>\r\n                    <UncontrolledPopover trigger=\"legacy\" placement=\"bottom\" target=\"PopoverLegacy\">\r\n                        <PopoverHeader>Legacy Trigger</PopoverHeader>\r\n                        <PopoverBody>\r\n                            Legacy is a reactstrap special trigger value (outside of bootstrap's spec/standard). Before reactstrap correctly supported click and focus, it had a hybrid which was very useful and has been brought back as trigger=\"legacy\". One advantage of the legacy trigger is that it allows the popover text to be selected while also closing when clicking outside the triggering element and popover itself.</PopoverBody>\r\n                    </UncontrolledPopover>\r\n                </p>\r\n                <hr />\r\n            </div>\r\n        </li>\r\n    );\r\n};\r\n\r\nfunction addCartPopover() {\r\n    alert(\"Great Shot!\");\r\n}\r\n\r\nconst myelement = (\r\n    <button onClick={addCartPopover}>Take the shot!</button>\r\n);\r\n\r\nexport default ItemDetail;"]},"metadata":{},"sourceType":"module"}